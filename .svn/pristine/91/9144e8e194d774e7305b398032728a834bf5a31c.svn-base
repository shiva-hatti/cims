/**
 * 
 */
package com.iris.controller;

import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.iris.caching.ObjectCache;
import com.iris.dto.CategoryDto;
import com.iris.dto.EntityDto;
import com.iris.dto.EntityMasterDto;
import com.iris.dto.ServiceResponse;
import com.iris.dto.ServiceResponse.ServiceResponseBuilder;
import com.iris.exception.ApplicationException;
import com.iris.service.impl.EntityServiceV2;
import com.iris.util.constant.ErrorCode;
import com.iris.validator.EntityMasterValidatorV2;

/**
 * @author sajadhav
 *
 */

@RestController
@RequestMapping("/service/entityMasterService/V2")
public class EntityMasterControllerV2 {
	private static final Logger LOGGER = LogManager.getLogger(EntityMasterControllerV2.class);

	@Autowired
	private EntityServiceV2 entityServiceV2;

	@Autowired
	private EntityMasterValidatorV2 entityMasterValidatorV2;

	@PostMapping(value = "/getFlatEntityList")
	public ServiceResponse getEntityMasterList(@RequestHeader(name = "JobProcessingId") String jobProcessId, @RequestBody EntityMasterDto entityMasterDto) {
		
		LOGGER.info(jobProcessId + " Request Received to fetch getFlatEntityList V2 ");
		try {
			entityMasterValidatorV2.validateRequestObjectToFetchEntityList(entityMasterDto);
			List<EntityDto> entityDtos = entityServiceV2.getFlatEntityList(entityMasterDto);
			LOGGER.info(jobProcessId + " Request completed to fetch getFlatEntityList V2 ");
			return new ServiceResponseBuilder().setStatus(true).setResponse(entityDtos).build();
		} catch(ApplicationException ae) {
			LOGGER.error(jobProcessId + " Exception occured to fetch getFlatEntityList V2 ", ae);
			return new ServiceResponseBuilder().setStatus(false).setStatusCode(ae.getErrorCode()).setStatusMessage(ae.getErrorMsg()).build();
		} catch(Exception e) {
			LOGGER.error(jobProcessId + " Exception occured to fetch getFlatEntityList V2 ", e);
			return new ServiceResponseBuilder().setStatus(false).setStatusCode(ErrorCode.EC0033.toString()).setStatusMessage(ObjectCache.getErrorCodeKey(ErrorCode.EC0033.toString())).build();
		}
	}
	
	
	@PostMapping(value = "/getCategoryWiseEntityList")
	public ServiceResponse getCategoryWiseEntityList(@RequestHeader(name = "JobProcessingId") String jobProcessId, @RequestBody EntityMasterDto entityMasterDto) {
		
		LOGGER.info(jobProcessId + " Request Received to fetch getCategoryWiseEntityList V2 ");
		try {
			entityMasterValidatorV2.validateRequestObjectToFetchEntityList(entityMasterDto);
			CategoryDto categoryDto = entityServiceV2.getCategoryWiseEntityList(entityMasterDto, jobProcessId);
			LOGGER.info(jobProcessId + " Request completed to fetch getCategoryWiseEntityList V2 ");
			return new ServiceResponseBuilder().setStatus(true).setResponse(categoryDto).build();
		} catch(ApplicationException ae) {
			LOGGER.error(jobProcessId + " Exception occured to fetch getCategoryWiseEntityList V2 " , ae);
			return new ServiceResponseBuilder().setStatus(false).setStatusCode(ae.getErrorCode()).setStatusMessage(ae.getErrorMsg()).build();
		} catch(Exception e) {
			LOGGER.error(jobProcessId + " Exception occured to fetch getCategoryWiseEntityList V2 ", e);
			return new ServiceResponseBuilder().setStatus(false).setStatusCode(ErrorCode.EC0033.toString()).setStatusMessage(ObjectCache.getErrorCodeKey(ErrorCode.EC0033.toString())).build();
		}
	}
	
	

}
