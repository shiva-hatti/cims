/**
 * 
 */
package com.iris.service.impl;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.iris.exception.ServiceException;
import com.iris.model.GroupMasterBulk;
import com.iris.model.PanMasterBulk;
import com.iris.repository.GroupMasterBulkRepo;
import com.iris.service.GenericService;
import com.iris.util.constant.ColumnConstants;
import com.iris.util.constant.ErrorConstants;
import com.iris.util.constant.MethodConstants;

/**
 * @author Siddique
 *
 */
@Service
public class GroupMasterBulkService implements GenericService<GroupMasterBulk, Long>{

	@Autowired
	private GroupMasterBulkRepo groupMasterBulkRepo;
	
	@Override
	public GroupMasterBulk add(GroupMasterBulk entity) throws ServiceException {
		
		return groupMasterBulkRepo.save(entity);
	}

	@Override
	public boolean update(GroupMasterBulk entity) throws ServiceException {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public List<GroupMasterBulk> getDataByIds(Long[] ids) throws ServiceException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public GroupMasterBulk getDataById(Long id) throws ServiceException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<GroupMasterBulk> getDataByColumnValue(Map<String, List<String>> columnValueMap, String methodName)
			throws ServiceException {
		try {
			if(methodName.equalsIgnoreCase(MethodConstants.GET_UNPROCESSED_DATA_AND_UPDATE_IS_PROCESSED_FLAG.getConstantVal())) {
				List<GroupMasterBulk> groupMasterBulkList = groupMasterBulkRepo.getUnprocessedData();
				
				return groupMasterBulkList;
			}
		}catch(Exception e) {
			throw new ServiceException(ErrorConstants.ERROR_MSG_SERVICE.getConstantVal(), e);
		}
		return null;
	}

	@Override
	public List<GroupMasterBulk> getDataByColumnLongValue(Map<String, List<Long>> columnValueMap, String methodName)
			throws ServiceException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<GroupMasterBulk> getDataByObject(Map<String, Object> columnValueMap, String methodName)
			throws ServiceException {
		try {
			String langCode = null;
			String entityCode = null;
			
			for(String columnName : columnValueMap.keySet()) {
				if(columnName.equalsIgnoreCase(ColumnConstants.ENT_CODE.getConstantVal())) {
					entityCode = (String) columnValueMap.get(columnName);
				} else if(columnName.equalsIgnoreCase(ColumnConstants.LANG_CODE.getConstantVal())) {
					langCode = (String) columnValueMap.get(columnName);
				}
			}
			
			if(methodName.equalsIgnoreCase(MethodConstants.GET_DATA_BY_ENTITY_CODE_AND_LANG_CODE.getConstantVal())) {
				return groupMasterBulkRepo.getDataByEntityCodeAndLangCode(entityCode, langCode);
			}
			
		}catch(Exception e) {
			throw new ServiceException(ErrorConstants.ERROR_MSG_SERVICE.getConstantVal(), e);
		}
		return null;
	}

	@Override
	public List<GroupMasterBulk> getActiveDataFor(Class bean, Long id) throws ServiceException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<GroupMasterBulk> getAllDataFor(Class bean, Long id) throws ServiceException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void deleteData(GroupMasterBulk bean) throws ServiceException {
		// TODO Auto-generated method stub
		
	}

}
