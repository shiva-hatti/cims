package com.iris.controller;


import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.iris.caching.ObjectCache;
import com.iris.dto.ReturnFileFormatMapDto;
import com.iris.dto.ServiceResponse;
import com.iris.dto.ServiceResponse.ServiceResponseBuilder;
import com.iris.model.Return;
import com.iris.model.ReturnFileFormatMap;
import com.iris.service.GenericService;
import com.iris.util.constant.ErrorCode;

@RestController
@RequestMapping("/service/returnFileFormatController")
public class ReturnFileFormatController {
	
	private static final Logger Logger = LogManager.getLogger(ReturnFileFormatController.class);
	
	@Autowired
	private GenericService<ReturnFileFormatMap, Long> returnFileFormatService;
	
	/**
	 * This method adds Mapping Between Return and File Format.
	 * 
	 * @param jobProcessId
	 * @param returnRegulatorMappingDto
	 * @return
	 */
	@PostMapping(value = "/addReturnFileFormatMapping")
	public ServiceResponse addReturnDepartmentMapping(@RequestHeader(name = "JobProcessingId")  String jobProcessId, @RequestBody ReturnFileFormatMapDto returnFileFormatMapDto) {
		ReturnFileFormatMap returnFileFormatMap = new ReturnFileFormatMap();
		try {
			Logger.debug("Request for Return mapping to File Format for job processingid" + jobProcessId);
			Return ret = new Return();
			ret.setReturnId(returnFileFormatMapDto.getReturnIdFk());
			returnFileFormatMap.setReturnBean(ret);
			returnFileFormatMap.setFileFormatIdString(returnFileFormatMapDto.getFileFormatIdString());
			returnFileFormatMap = returnFileFormatService.add(returnFileFormatMap);
			
		} catch(Exception e) {
			Logger.error("Exception while mapping return to File Format for job processingid " +jobProcessId, e);
			return new ServiceResponseBuilder().setStatus(false).setStatusCode(ErrorCode.E0692.toString())
					.setStatusMessage(ObjectCache.getErrorCodeKey(ErrorCode.E0692.toString())).build();
		}
		ServiceResponse response;
		if(returnFileFormatMap == null) {
			response = new ServiceResponse.ServiceResponseBuilder().setStatus(false).setStatusCode(ErrorCode.E0772.toString())
					.setStatusMessage(ObjectCache.getErrorCodeKey(ErrorCode.E0772.toString())).build();
			Logger.debug("Return mapping to File Format  Failed. for job processingid" + jobProcessId);
		} else {
			response = new ServiceResponse.ServiceResponseBuilder().setStatus(true).setResponse(returnFileFormatMap).build();
			Logger.info("request completed to add Return File Format mapping for job processingid" +jobProcessId);
		}
		return response;
	}
	

}
