/**
 * 
 */
package com.iris.sdmx.exceltohtml.validator;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.iris.exception.ApplicationException;
import com.iris.sdmx.exceltohtml.bean.ProcessUploadInputBean;
import com.iris.service.impl.ReturnTemplateService;
import com.iris.service.impl.UserMasterService;

/**
 * @author apagaria
 *
 */
@Component
public class SdmxUploadFileProcessorValidator {

	@Autowired
	private UserMasterService userMasterService;

	@Autowired
	private ReturnTemplateService returnTemplateService;

	/**
	 * @param processUploadInputBean
	 * @throws ApplicationException
	 */
	public void processFileValidation(ProcessUploadInputBean processUploadInputBean, Long userId, Long returnTemplateId)
			throws ApplicationException {
		if (StringUtils.isBlank(processUploadInputBean.getExcelFilePath())) {
			throw new ApplicationException("EC001", "Excel Path can't be blank");
		}

		if (StringUtils.isBlank(processUploadInputBean.getHtmlFilePath())) {
			throw new ApplicationException("EC002", "HTML file Path can't be blank");
		}

		if (StringUtils.isBlank(processUploadInputBean.getFileName())) {
			throw new ApplicationException("EC003", "File name can't be blank");
		}

		if (StringUtils.isBlank(processUploadInputBean.getReturnCode())) {
			throw new ApplicationException("EC004", "Return code can't be blank");
		}

		if (StringUtils.isBlank(processUploadInputBean.getSheetInfoBean())) {
			throw new ApplicationException("EC005", "Sheet Info can't be blank");
		}

		// Validate User
		validateUser(userId);

		// validate Return Template id
		validateReturnTemplate(returnTemplateId);
	}

	/**
	 * @param userId
	 * @throws ApplicationException
	 */
	private void validateUser(Long userId) throws ApplicationException {
		if (userId == null) {
			throw new ApplicationException("ER016", "User Id can't blank");
		} else if (StringUtils.isBlank(userMasterService.getUserNameByUserId(userId))) {
			throw new ApplicationException("ER017", "User not Found");
		}
	}

	/**
	 * @param returnTemplateId
	 * @throws ApplicationException
	 */
	private void validateReturnTemplate(Long returnTemplateId) throws ApplicationException {
		if (returnTemplateId == null) {
			throw new ApplicationException("ER007", "Return Template can't blank");
		} else if (!returnTemplateService.isReturnTemplateExist(returnTemplateId)) {
			throw new ApplicationException("ER008", "Return Template not found");
		}
	}

}
