package com.iris.util.constant;

import java.util.List;

/**
 * This class would store all the generic constants to be used in the
 * application
 * 
 * @author sajadhav
 * @version 1.1
 */
public enum GeneralConstants {

	APP_ID("AppId"),
	XLSMIMETYPE("application/vnd.ms-excel"),
	XLSMIMETYPEFORBASE64STRING("application/x-tika-msoffice"),
	XLSXMIMETYPE("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"),
	XLSXMIMETYPEFORBASE64STRING("application/x-tika-ooxml"),
	CSVMIMETYPE("text/csv"),
	TEXTFILEMIMETYPE("text/plain"),
	APPLICATIONCSVMIMETYPE("application/csv"),
	XMLMIMETYPE("application/xml"),
	JSONMIMETYPE("application/json"),
	FILE_DETAILS_COMP("ADD_FILE_DETAILS"),
	ADD_UPDATE_SCHEDULER_LOG("ADD_UPDATE_SCHEDULER_LOG"),
	GET_SCHEDULER_STATUS("GET_SCHEDULER_STATUS"),
	GET_SCHEDULER_DET("GET_SCHEDULER_DET"),
	INVALID_FILE_EXTENSION("INVALID_FILE_EXTENSION"),
	VALID("VALID"),
	INVALID("INVALID"),
	SYSTEM_TO_SYSTEM_USER("SYSTEM"),
	API_USER("API"),
	INVALID_FILE_FORMAT("Invalid file format"),
	XLS("xls"),
	XLSX("xlsx"),
	CSV("csv"),
	TXT("txt"),
	XML("xml"),
	JSON("json"),
	TOKEN("token"),
	REGULATOR_ROLE_TYPE_ID(1L),
	ENTITY_ROLE_TYPE_ID(2L),
	APPID_SEPERATOR("~"),
	JWT_TOKEN("jwtToken"),
	EMAIL_TO(1),
	EMAIL_CC(2),
	EMAIL_BCC(3),
	GET_EMAIL_LIST(""),
	PREPARE_MAIL_CONTENT("PREPARE_MAIL_CONTENT"), 
	GET_ROLE_EMAIL_LIST("GET_ROLE_EMAIL_LIST"), 
	FETCH_WORKFLOW_ID("FETCH_WORKFLOW_ID"),
	GET_MAIL_LIST_OF_USER_ROLE("GET_MAIL_LIST_OF_USER_ROLE"),
	GET_MAIL_LIST_COMPANY("GET_MAIL_LIST_COMPANY"),
	ADD_EMAIL_HISTORY("ADD_EMAIL_HISTORY"),
	GET_WORKFLOW_JSON_OBJ_BY_STEP_ID("GET_WORKFLOW_JSON_OBJ_BY_STEP_ID"),
	MAIL_COMPONENT_TYPE("MAIL"), 
	FREQUENCY_ADHOC(14L),
	BASEFORTNIGHTDATE("04-JAN-2008"),
	ASSIGN_RETURN_DEPARTMENT(85L),
	UNLISTED_COMPANY_ID(2L),
	ENTITY_CHANNEL_MAP_ALERT_ID(0L),
	META_DATA_VAL_FAILED_ALERT_ID(88L),
	META_DATA_VALIDATED_ID(1),
	FILE_STATUS_META_DATA_VALIDATED_ID(1),
	FILE_STATUS_META_DATA_FAILED_ID(19),
	WEB_CHANNEL(1L),
	UPLOAD_CHANNEL(2L),
	API_CHANNEL(3L),
	EMAIL_CHANNEL(4L),
	SYSTEM_CHANNEL(5L),
	INVALID_RETURN_FILE_NAME("invalid return file name"),
	START_DATE_VAL_FOR_MONTH("01"),
	FILLING_WINDOW_DATE_SEPARATOR("-"),
	FILLING_WINDOW_DATE_SEPARATOR_FOR_VIEW("::"),
	FILLING_STATUS(1),
	CURRENCY_ISO_CODE("iso4217:"),
	FILLING_DATES_MAP_SEPARATOR("~"),
	FILE_CREATE_DATE_FORMAT("dd-MM-YY"),
	FILE_CREATE_TIME_FORMAT("HH-mm-ss"),
	CONST_DDMMYYYY("ddMMyyyy"),
	API_LOG_DETAILS_COMP("API_LOG_DETAILS_COMP"), 
	ENG_LANG("en"),
	ENG_LANG_ID(15L),
	HIN_LANG("hi"),
	EXPIRED("EXPIRED"),
	CLOSED("CLOSED"),
	OPENE("OPEN"),
	FILE_STATUS_VALID_ID(17),
	FILE_STATUS_INVALID_ID(18),
	QUARTERLY_FREQ_ID(3L),
	MONTHLY_FREQ_ID(4L),
	MONTHLY("Monthly"),
	R009("R009"),
	R012("R012"),
	R002("R002"),
	R014("R014"),
	R088("R088"),
	RECORD_FETCHED_SUCCESSFULLY("RECORD_FETCHED_SUCCESSFULLY"),
	RECORD_SAVED_SUCCESSFULLY("RECORD_SAVED_SUCCESSFULLY"),
	MAIL_NEW("MAIL_NEW"),
	EMAIL_SENT_HIS_ID("id"),
	STRING_ARRAY("array"),
	SP_UPDATE_USER_ROLE_MASTER("CALL SP_UPDATE_USER_ROLE_MASTER(?,?)"),
	SP_INSERT_RETURN_ENTITY_MAPPING("CALL SP_INSERT_RETURN_ENTITY_MAPPING(?,?,?,?)"),
	SP_RETURN_ENTITY_CHANNEL_MAP("CALL SP_RETURN_ENTITY_CHANNEL_MAP(?,?,?,?)"),
	SCHEDULER_CODE("schedulerCode"),
	JOB_PROCESSING_ID("JobProcessingId"),
	GET_ACTIVE_SCHEDULER_STATUS_BY_CODE("GET_ACTIVE_SCHEDULER_STATUS_BY_CODE"), 
	NULL_BEAN("EMPTY BEAN RECEIVED"), 
	SUCCESS("Success"), 
	RECORDS_MISSING("Some Labels Records Are Missing"), 
	EMPTY_BEAN_RECEIVED("Empty Bean Received"), 
	MANDATORY_VARIABLE_ERROR("Mandatory Fields Are Missing"), 
	IS_MASTER_REGULATOR_ID(1l),
	ENTITY_ROLE_TYPE(2l),
	EMPTY_RETURN_LIST("Return List Is Empty"), 
	ERROR_WHILE_ADD_OR_UPDATE("Error While Add Or Update"), 
	SP_CATEGORY_RETURN_CHANNEL_MAP("CALL SP_CATEGORY_RETURN_CHANNEL_MAP(?,?,?,?,?)"), 
	NO_ENTITY_MAPPED("No Entity Mapped For This Regulator"), 
	NO_ENTITY_MAPPED_ENTITY("No Entity Mapped For This Entity"), 
	ENTITY_CAT_CODE_MISMATCH("EntityId And Category Code Doesnt Mapped"), 
	MAPPING_NOT_PRESENT("No Mapping Present For This User ID"),
	EMPTY_STRING(""), 
	NULL_USERNAME("Username Is Null"), 
	NULL_PASSWORD("Password Is Null"), 
	NULL_BANK_WORKING_CODE("Bank Working Code Is Null"), 
	AUTHENTICATE_USER("USER_AUTHENTICATE_VIA_API"),
	SAVE_PARTIAL_DATA("SAVE_PARTIAL_DATA"),
	FILLING_SUBMITTED_SUCCESSFULLY("Filling submitted successfully"),
	FILLING_SAVED_SUCCESSFULLY("Filling saved successfully"),
	TXTMIMETYPE("text/plain"),
	RETURN_GROUP_MAP_LABEL_PROCEDURE("CALL SP_INSERT_RETURN_GROUP_LABEL(?)"),
	TOKEN_PRIFIX("Bearer"),
	TOKEN_MAX_VALID_TIME("24"),
	TOKEN_USER_NAME("TOKEN_USER_NAME"),
	SP_UPDATE_RETURNGROUP("CALL SP_UPDATE_RETURNGROUP(?,?,?)"), 
	AUTHENTICATION_FAILED("Authentication Failed"), 
	BANK_WORKING_CODE_MISMATCH("Bank working code mis-match"),
	AUTHENTICATION_FAILED_API("AUTHENTICATION_FAILED"), 
	NULL_JWT_TOKEN("JWT is Nul"), 
	NULL_FREQUENCY("Frequency is Null"), 
	NULL_START_DATE("Start Date Is Null"),
	NULL_END_DATE("End Date Is Null"),
	NULL_BASE_64_STRING("Base64 Filing String Is Null"),
	NULL_BASE_64_DOC_STRING("Base64 Supporting Doc String Is Null"),
	INVALID_REQUEST_PARAMETER("Invalid Request Parameter"),
	USER_NOT_EXIST("User Doesn't Exist"),
	INVALID_ENTITY_CODE("Entity Code is not valid"),
	INVALID_RETURN_CODE("Return Code is not Valid"),
	PDFMIMETYPE("application/pdf"),
	PDF("pdf"),
	IMAGEJPEGMIMETYPE("image/jpeg"),
	JPEG("jpeg"),
	IMAGEJPGMIMETYPE("image/jpg"),
	JPG("jpg"),
	MSWORDMIMETYPE("application/msword"),
	MSWORD("doc"),
	ZIPMIMETYPE("application/zip"),
	ZIP("zip"),
	IMGPNGMIMETYPE("image/png"),
	PNG("png"),
	XLSMMIMETYPE("application/vnd.ms-excel.sheet.macroEnabled.12"),
	XLSM("xlsm"),
	DOCXMIMETYPE("application/vnd.openxmlformats-officedocument.wordprocessingml.document"),
	DOCX("docx"),
	XZIPMIMETYPE("application/x-zip-compressed"),
	XZIP("zip"),
	INVALID_SUPPORTING_DOC_FORMAT("Invalid Supporting Document Format"),
	INVALID_TOKEN("Invalid JWT Token"),
	XML_EXTENSION(".xml"),
	VALIDATE_METADATA("VALIDATE_META_DATA"),
	AUDITED_PROPERTY_CODE("A"),
	UNAUDITED_PROPERTY_CODE("U"),
	PROVISION_PROPERTY_CODE("P"),
	FINAL_PROPERTY_CODE("F"),
	AUDITED_UNAUDITED_PROPERTY_ID(1),
	PROVISIONAL_FINAL_PROPERTY_ID(3),
	UPLOAD_ACTIVITY_ID(4L),
	ACTIONID_ADDITION(1),
	ACTIONID_EDITION(2),
	ACTIONID_DELETION(3),
	UPLOAD_FILLING_MENU_ID(93L),
	FRIDAY("FRIDAY"),
	SP_RETURN_REGULATOR_MAPPING("CALL SP_RETURN_REGULATOR_MAPPING(?,?,?,?,?)"),
	VISITED_STAGE("V"),
	CURRENT_STAGE("C"),
	NEXT_STAGE("N"),
	SUCCESS_RESULT_OF_STAGE("S"),
	FAILED_RESULT_OF_STAGE("F"),
	NA_RESULT_OF_STAGE("NA"),
	APPROVED("APPROVED"),
	REJECTED("REJECTED"),
	BUSINESS_VALIDATION_ACTIVITY("field.businessValStage"),
	META_DATA_ACTIVITY("field.metdaDataStage"),
	UPLOADER_ACTIVITY("field.uploader.review"),
	COMPLETED_ACTIVITY("field.completedStage"),
	SP_RETURN_FILE_FORMAT_MAP("CALL SP_RETURN_FILE_FORMAT_MAP(?,?,?)"),
	WEB_SERVICE_COMPONENT_URL_ID_API(135l),
	FILING_WINDOW_OPENED("filling.allowed.asFilingWIndow.opened"),
	UNLOCK_REQUEST_DATE_NOT_CROSSED("filling.allowed.asFilingDate.lessthan.unlockRequest.date"), 
    REVISION_COUNT_NOT_EXCEEDED("filling.allowed.asMaximumRevisionCount.notExceeded"),
    REVISION_REQUEST_DATE_NOT_CROSSED("filing.allowed.asFilingDate.lessThan.maxRevisionRequestDate"),
    ERROR_MSG_BEAN("Error in Bean. "),
    COMMA(","),
    JWT_TOKEN_VALID("JWT token is valid"),
    FILING_DETAILS_CONSTANT("FilingDetail"),
    FILE_TO_PUSH("FileToPush"),
    // Changed filing status Id
	TECHNICAL_ERROR_ID(12),
	UPLOAD_FILE_PROCESSING_ID(7),
	BUSINESS_VALIDATION_FAIL(2),
	BUSINESS_VALIDATION_SUCCESS(6),
	UPLOADED(1),
	APPROVED_BY_RBI(8),
	DEFAULT_LANG_CODE("en"),
	SYSTEM_ROLE_ID(2L), 
	STATUS_COMPLETED(2),
	STATUS_REJECTED(3),
	REQUEST_PENDING_FOR_APPOVAL(1),
	XBRL_RETURN_TYPE_ID(1L),
	OTHER_RETURN_TYPE_ID(3L),
	WEB_RETURN_TYPE_SECTION(2),
	CSV_RETURN_TYPE_SECTION(1),
	CUSTOM_VALIDATION_PENDING(14),
	CUSTOM_VALIDATION_SUCCESSFUL(15),
	CUSTOM_VALIDATION_FAILED(16),
	SP_WORKFLOW_RETURN_MAPPING("CALL SP_WORKFLOW_RETURN_MAPPING(?,?,?,?)"),
	GET_ROLE_PLATFORM_LIST("GET_ROLE_PLATFORM_LIST"),
	SESSION_FORMAT("dd/MM/yyyy"),
	UUID("UUID"),
	XML_ELEMENT_RETURN_CODE("tp:returnCode"),
	XML_ELEMENT_ENTRY_POINT_DOCUMENT("tp:entryPointDocument"),
	UNDER_SCORE("_"),
	PENDING_ADMIN_STATUS_ID(1),
	APPROVED_ADMIN_STATUS_ID(2),
	REJECTED_ADMIN_STATUS_ID(3),
	FUSION_AUTHORIZATION_KEY("Authorization"),
	FUSION_AUTHORIZATION_VALUE("Basic aXJpc2FkbWluOmFiY2QxMjM0"),
	ACTION("action"),
	REPLACE("REPLACE"),
	SP_INSERT_AUDITOR_LBL("CALL SP_INSERT_AUDITOR_LBL(?,?)"),
	AUDITED("Audited"),
	UNAUDITED("Un-Audited"),
	COMPLETED("Completed"),
	PENDING("Pending"),
	STATUS_NA("NA"),
	FAILED("Failed"),
	ALL("All"),
	APR_TO_MAR("APR_TO_MAR"),
	JAN_TO_DEC("JAN_TO_DEC"),
	MIS_REPORT_PENDING("pending"),
	MIS_REPORT_SUMITTED("submit"),
	YTD_START_DATE("ytdStartDate"),
	YTD_END_DATE("ytdEndDate"),
	PQ_END_DATE("pqEndDate"),
	PY_END_DATE("pyEndDate"),
	CUR_Q_START_DATE("currQuStartDate"),
	CUR_Q_END_DATE("currQuEndDate"),
	FIRST_PRV_MAR_FIN_YR_END_DATE("firstPrvMarFinYrEndDate"),
	FIRST_PRV_MAR_FIN_YR_START_DATE("firstPrvMarFinYrStartDate"),
	SECOND_PRV_MAR_FIN_YR_END_DATE("secondPrvMarFinYrEndDate"),
	SECOND_PRV_MAR_FIN_YR_START_DATE("secondPrvMarFinYrStartDate"),
	THIRD_PRV_MAR_FIN_YR_END_DATE("thirdPrvMarFinYrEndDate"),
	THIRD_PRV_MAR_FIN_YR_START_DATE("thirdPrvMarFinYrStartDate"),
	TWELVE_MONTH_ENDING_CUR_QTR_START_DATE("c12MonthEndingCurQtrStartDate"),
	TWELVE_MONTH_ENDING_CUR_QTR_END_DATE("c12MonthEndingCurQtrEndDate"),
	TWELVE_MONTH_ENDING_CUR_QTR_FIRST_PRV_FIN_YEAR_START_DATE("c12MonthEndingCurQtrFirstPrvFinYearStartDate"),
	TWELVE_MONTH_ENDING_CUR_QTR_FIRST_PRV_FIN_YEAR_END_DATE("c12MonthEndingCurQtrFirstPrvFinYearEndDate"),
	TWELVE_MONTH_ENDING_CUR_QTR_SECOND_PRV_FIN_YEAR_START_DATE("c12MonthEndingCurQtrSecondPrvFinYearStartDate"),
	TWELVE_MONTH_ENDING_CUR_QTR_SECOND_PRV_FIN_YEAR_END_DATE("c12MonthEndingCurQtrSecondPrvFinYearEndDate"),
	TWELVE_MONTH_ENDING_PRV_QTR_START_DATE("p12MonthEndingPrvQtrStartDate"),
	TWELVE_MONTH_ENDING_PRV_QTR_END_DATE("p12MonthEndingPrvQtrEndDate"),
	TWELVE_MONTH_ENDING_PRV_QTR_FIRST_PRV_FIN_YEAR_START_DATE("p12MonthEndingPrvQtrFirstPrvFinYearStartDate"),
	TWELVE_MONTH_ENDING_PRV_QTR_FIRST_PRV_FIN_YEAR_END_DATE("p12MonthEndingPrvQtrFirstPrvFinYearEndDate"),
	TWELVE_MONTH_ENDING_PRV_QTR_SECOND_PRV_FIN_YEAR_START_DATE("p12MonthEndingPrvQtrSecondPrvFinYearStartDate"),
	TWELVE_MONTH_ENDING_PRV_QTR_SECOND_PRV_FIN_YEAR_END_DATE("p12MonthEndingPrvQtrSecondPrvFinYearEndDate"),
	TALEND("TALEND"),
	CUR_HALF_YEAR_END_DATE("curHalfYearEndDate"),
	PRV_HALF_YEAR_END_DATE("prvHalfYearEndDate"),
	MONTH_END_DATE("monthEndDate"),
	FIRST_FORTNIGHT_END_DATE("firstFortnightEndDate"),
	SECOND_FORTNIGHT_END_DATE("secondFortnightEndDate"),
	THIRD_FORTNIGHT_END_DATE("thirdFortnightEndDate"),
	LAST_MONTH_LAST_FORTNIGHT_END_DATE("lastMonthLastFortnightEndDate");
	

	private String name;
	private Long number;
	private Integer range;
	private Double doubleNo;
	private List<Long> list;

	private GeneralConstants(String name) {
		this.name = name;
	}

	private GeneralConstants(Long number) {
		this.number = number;
	}

	private GeneralConstants(Double doubleNo) {
		this.doubleNo = doubleNo;
	}

	private GeneralConstants(List<Long> list) {
		this.list = list;
	}

	private GeneralConstants(Integer range) {
		this.range = range;
	}

	public String getConstantVal() {
		return name;
	}

	public Long getConstantLongVal() {
		return number;
	}

	public Integer getConstantIntVal() {
		return range;
	}

	public Double getConstantDblVal() {
		return doubleNo;
	}

	public List<Long> getConstantLongListVal() {
		return list;
	}

}