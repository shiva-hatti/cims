package com.iris.repository;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import com.iris.dto.ErrorCodeMessageBean;
import com.iris.model.ErrorVersionChannelMapping;
import com.iris.model.ReturnTemplate;

public interface ErrorVersionChannelMappingRepository extends JpaRepository<ErrorVersionChannelMapping, Long> {

	@Query("from ErrorVersionChannelMapping where isActiveForFileBasedFiling=:isActive and returnTemplateIdFk=:returnTemplate")
	List<ErrorVersionChannelMapping> getErrorVersionChannelMappingRecordForFileByStatus(@Param("isActive") Boolean isActiveForFileBasedFiling, 
			ReturnTemplate returnTemplate);

	@Query("from ErrorVersionChannelMapping where isActiveForWebFormBasedFiling=:isActive and returnTemplateIdFk=:returnTemplate")
	List<ErrorVersionChannelMapping> getErrorVersionChannelMappingRecordForWebFormBasedByStatus(@Param("isActive") Boolean isActiveForWebFormBasedFiling, 
			ReturnTemplate returnTemplate);
	
	@Query("SELECT new com.iris.dto.ErrorCodeMessageBean(B.technicalErrorCode, B.businessErrorCode, A.errorKeyLabelForWebBased) from "
			+ "ErrorCodeLabelMapping A, ErrorCodeDetail B, ErrorVersionChannelMapping C where A.languageIdFk.languageCode=:langCode and "
			+ "C.returnTemplateIdFk.returnTemplateId in (select returnTemplateId from ReturnTemplate where returnObj.returnId=:returnId) and "
			+ "C.errorCodeDetailIdFk.errorCodeDetailId=A.errorCodeDetailIdFk.errorCodeDetailId and B.errorCodeDetailId=C.errorCodeDetailIdFk.errorCodeDetailId "
			+ "and C.isActiveForWebFormBasedFiling=1")
	List<ErrorCodeMessageBean> getErrorsRecordForWebFormBasedOnReturnId(@Param("returnId") Long returnId, @Param("langCode") String langCode);

}